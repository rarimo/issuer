.common-semantic-release:
  except:
    - "triggers"
    - "tags"
  image: "registry.gitlab.com/q-dev/infrastructure/semantic-release:latest"
  stage: ".pre"
  variables:
    GIT_STRATEGY: "clone"

variables:
  IMAGE: registry.gitlab.com/q-dev/q-id/issuer
#  IMAGE_TAG: registry.gitlab.com/q-dev/q-id/issuer:$CI_COMMIT_TAG
#  IMAGE_LATEST: registry.gitlab.com/q-dev/q-id/issuer/:latest

stages:
  - build

.before_script_template:
  before_script:
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf https://gitlab.com/
    - echo "machine gitlab.com login gitlab-ci-token password ${CI_JOB_TOKEN}" > ~/.netrc
    - go env -w GOPRIVATE=gitlab.com/*
    - go env -w GONOSUMDB=gitlab.com/*
    - go env -w GONOPROXY=gitlab.com/*

#.docker-login: &docker-login
#  before_script:
#    - echo "$REGISTRY_PASS" | docker login --username $REGISTRY_USER --password-stdin

#build:
#  <<: [*docker-login]
#  stage: build
#  tags:
#    - "amd64"
#  extends: .before_script_template
#  script:
#    - docker build -t $IMAGE_HASH . --build-arg BUILD_TOKEN=$CI_JOB_TOKEN --build-arg USERNAME="gitlab-ci-token"
#    - docker push $IMAGE_HASH

build:
  image:
    name: "gcr.io/kaniko-project/executor:v1.9.2-debug"
    entrypoint: [""]
  stage: build
  tags:
    - "amd64"
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"${CI_DEPENDENCY_PROXY_SERVER}\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
      --build-arg PROXY="${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/"
      --build-arg COMMIT="${CI_COMMIT_SHA}"
      --cache=true
      --cache-repo="${IMAGE}/cache"
      --build-arg VERSION="$CI_COMMIT_SHA"
      --build-arg BUILDNUM="${CI_JOB_ID}"
      --build-arg BUILD_TOKEN="${CI_JOB_TOKEN}"
      --build-arg USERNAME="gitlab-ci-token"


#release:
#  <<: [*docker-login]
#  stage: build
#  only:
#   - tags
#  script:
#    - docker build -t $IMAGE_TAG .
#    - docker push $IMAGE_TAG
